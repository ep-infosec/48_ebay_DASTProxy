<?xml version="1.0" encoding="ISO-8859-1" ?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app.xsd">

	<display-name>DAST Proxy</display-name>
	<description>
		This application is an interface to create a proxy for data created by
		Bluefin/Breeze/Selenium Test Cases
	</description>


	<!-- Main configuration file for this Spring web application. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml,
			/WEB-INF/spring-security.xml
		</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfiguration</param-name>
		<param-value>log4j2.xml</param-value>
	</context-param>

	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- Define the Spring Dispatcher Servlet for the REST services. The 'contextConfiguration' 
		param with an empty value means that the Spring Context won't try to load 
		a default file called restservices-servlet.xml -->
	<servlet>
		<servlet-name>restservices</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- This Servlet mapping means that this Servlet will handle all incoming 
		requests -->
	<servlet-mapping>
		<servlet-name>restservices</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- Loads the Spring web application context using the config file defined 
		above. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

<listener>
	
	<listener-class>
		org.springframework.web.context.request.RequestContextListener
	</listener-class>
   </listener>
   
<!--	<listener>-->
<!--		<listener-class>-->
<!--			org.springframework.web.util.Log4jConfigListener-->
<!--		</listener-class>-->
<!--	</listener>-->


	<!-- Session Configuration -->
	<session-config>
		<session-timeout>-1</session-timeout>
		<cookie-config>
			<http-only>true</http-only>
			<secure>true</secure>
		</cookie-config>
	</session-config>


	<!-- Error Codes are being handled at this point -->
	<error-page>
		<error-code>401</error-code>
		<location>/error.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/error.jsp</location>
	</error-page>

	<error-page>
		<error-code>405</error-code>
		<location>/error.jsp</location>
	</error-page>

	<error-page>
		<error-code>409</error-code>
		<location>/error.jsp</location>
	</error-page>

	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error.jsp</location>
	</error-page>

</web-app>     